<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>
<#@ assembly name="System.Xml.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ include file="$(ProjectDir)DbHelper.ttinclude"  #>

<#@ include file="$(ProjectDir)ModelAuto.ttinclude"	#>


<# 
	var solutionsPath = Host.ResolveAssemblyReference("$(SolutionDir)");
	var OutputPath = solutionsPath + "\\src\\3.Repository\\Met.Core.IRepository\\Base";
	if (!Directory.Exists(OutputPath))
	{
	    Directory.CreateDirectory(OutputPath);
	}
	var manager = new Manager(Host, GenerationEnvironment, true) { OutputPath = OutputPath };
	#> 

<# 
	var tableName=config.TableName;
 #>
<# 
if(tableName!=""){
    #>  

using System;
using Met.Core.Models;

namespace Met.Core.IRepository
{	
	/// <summary>
	/// I<#=tableName#>Repository
	/// </summary>	
	public interface I<#=tableName#>Repository : IBaseRepository<<#=tableName#>>
    {

       
    }
}

<# 
    } else{ 

	#>

<# 
    SqlConnection conn = new SqlConnection(config.ConnectionString); 
    conn.Open(); 
    System.Data.DataTable schema = conn.GetSchema("TABLES"); 
 #>

<# 
    foreach(System.Data.DataRow row in schema.Rows) 
    {  
		manager.StartBlock("I"+row["TABLE_NAME"].ToString()+"Repository"+".cs");//文件名
	 #>
	
using System;
using Met.Core.Models;
namespace Met.Core.IRepository
{	
	/// <summary>
	/// I<#=row["TABLE_NAME"].ToString()#>Repository
	/// </summary>	
	public interface I<#=row["TABLE_NAME"].ToString()#>Repository : IBaseRepository<<#=row["TABLE_NAME"].ToString()#>>
    {

       
    }
}

	<# 
		manager.EndBlock(); 
		} 
		
		manager.Process(true);
	}
	#> 



